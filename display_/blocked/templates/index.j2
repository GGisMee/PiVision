<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SocketIO Cars</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.js"></script>
</head>
<body>
    <canvas id="canvas" width="500" height="500" style="border:1px solid #000;"></canvas>
    <script>
        var socket = io();
        var canvas = document.getElementById("canvas");
        var ctx = canvas.getContext("2d");
        var points = {};
        var animationSpeed = 0.1;

        function drawCar(x, y, dx, dy) {
            ctx.save();
            ctx.translate(x, y);
            ctx.fillStyle = "black";
            ctx.fillRect(-10, -20, 20, 40);
            ctx.restore();
        }

        function drawArrow(x, y, dx, dy) {
            ctx.beginPath();
            ctx.moveTo(x, y);
            ctx.lineTo(x + dx, y + dy);
            ctx.strokeStyle = "red";
            ctx.lineWidth = 2;
            ctx.stroke();
        }

        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            Object.values(points).forEach(point => {
                point.x += (point.targetX - point.x) * animationSpeed;
                point.y += (point.targetY - point.y) * animationSpeed;
                drawCar(point.x, point.y, point.dx, point.dy);
                drawArrow(point.x, point.y, point.dx, point.dy);
            });
            requestAnimationFrame(animate);
        }

        socket.on("update_points", function(updatedPoints) {
            updatedPoints.forEach(({id, x, y, dx, dy}) => {
                if (!points[id]) {
                    points[id] = { x, y, dx, dy, targetX: x, targetY: y };
                } else {
                    points[id].targetX = x;
                    points[id].targetY = y;
                }
            });
        });

        animate();
    </script>
</body>
</html>
